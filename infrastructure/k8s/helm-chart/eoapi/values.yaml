# default values for eoapi.

# to pass `gitSha` in during `helm template` or `helm install` do:
# $ helm install --set gitSha=$(git rev-parse HEAD) ./eoapi
# $ helm template . -s template/vector/deployment.yaml -f values.yaml --set gitSha=$(git rev-parse HEAD)
gitSha: ""

# switches rendering output based on value "production" ONLY
# otherwise any string will do and spin up a
# dev-or-sandbox-like environment
platform_environment: "dev"

# TODO: secret management for "production"
# USERS
POSTGRES_DB: &POSTGRES_DB_ANCHOR "postgis"
POSTGRES_USER: &POSTGRES_USER_ANCHOR "username"
POSTGRES_PASSWORD: &POSTGRES_PASSWORD_ANCHOR "password"
# ADMIN
PGDATA: &PGDATA_ANCHOR "/var/lib/postgresql/data/pgdata"
PGPASSWORD: &PGPASSWORD_ANCHOR "password"
PGUSER: &PGUSER_ANCHOR "username"
PGDATABASE: &PGDATABASE_ANCHOR "postgis"
DB_SETTINGS: &DB_SETTINGS_ANCHOR
  PGDATA: *PGDATA_ANCHOR
  POSTGRES_DB: *POSTGRES_DB_ANCHOR
  POSTGRES_USER: *POSTGRES_USER_ANCHOR
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD_ANCHOR
  PGPASSWORD: *PGPASSWORD_ANCHOR
  PGUSER: *PGUSER_ANCHOR
  PGDATABASE: *PGDATABASE_ANCHOR


raster:
  enabled: false
  # nothing definitive about this, just plumbed in after quick survey of `eoAPI/infrastructure/aws/cdk/config.py`
  settings:
    timeout: 10
    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      limits:
        cpu: "512m"
        memory: "4096Mi"
      requests:
        cpu: "256m"
        memory: "3072Mi"
    envVars:
      CPL_VSIL_CURL_ALLOWED_EXTENSIONS: ".tif,.TIF,.tiff"
      GDAL_CACHEMAX: "200"  # 200 mb
      GDAL_DISABLE_READDIR_ON_OPEN: "EMPTY_DIR"
      GDAL_INGESTED_BYTES_AT_OPEN: "32768"
      GDAL_HTTP_MERGE_CONSECUTIVE_RANGES: "YES"
      GDAL_HTTP_MULTIPLEX: "YES"
      GDAL_HTTP_VERSION: "2"
      PYTHONWARNINGS: "ignore"
      VSI_CACHE: "TRUE"
      VSI_CACHE_SIZE: "5000000"  # 5 MB (per file-handle)
      DB_MIN_CONN_SIZE: "1"
      DB_MAX_CONN_SIZE: "1"


stac:
  enabled: false
  # nothing definitive about this, just plumbed in after quick survey of `eoAPI/infrastructure/aws/cdk/config.py`
  settings:
    timeout: 10
    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      limits:
        cpu: "512m"
        memory: "1024Mi"
      requests:
        cpu: "256m"
        memory: "256Mi"


vector:
  enabled: true
  # nothing definitive about this, just plumbed in after quick survey of `eoAPI/infrastructure/aws/cdk/config.py`
  settings:
    timeout: 10
    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      limits:
        cpu: "512m"
        memory: "1024Mi"
      requests:
        cpu: "256m"
        memory: "256Mi"
    envVars:
      ##############
      # tipg
      ##############
      TIPG_CATALOG_TTL: "0"
      ##############
      # uvicorn-gunicorn
      ##############
      HOST: "0.0.0.0"
      PORT: "8080"
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      WEB_CONCURRENCY: "10"
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      # WORKERS_PER_CORE: "1"
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#max_workers
      # MAX_WORKERS: "10"
      ##############
      # postgresql
      ##############
      POSTGRES_USER: *POSTGRES_USER_ANCHOR
      POSTGRES_PASS: *POSTGRES_PASSWORD_ANCHOR
      POSTGRES_DBNAME: *POSTGRES_DB_ANCHOR
      POSTGRES_HOST: "pgstac"
      POSTGRES_PORT: "5432"
      DB_MIN_CONN_SIZE: "1"
      DB_MAX_CONN_SIZE: "10"
  image:
    name: ghcr.io/ranchodeluxe/vector
    tag: latest


db:
  enabled: true
  sql:
    countries: './files/countries.sql'
  settings:
    envVars: *DB_SETTINGS_ANCHOR

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

